means = {1: 1.0,
  2: 0.12622175704619956,
  3: -0.028355382367254052,
  4: 0.059421969639683873,
  5: 0.0086755009046284148,
  6: 0.033204616968433943,
  7: 0.015552645648260839,
  8: 0.023121705896903145,
  9: 0.0021686342645754518,
  10: 0.0027790172493375237,
  11: 0.012647019391354989,
  12: 0.01113673330670042,
  13: -0.0063064837910195059,
  14: 0.014632096661729464,
  15: 0.011424336300885263,
  'others': 0.0043796653172588481}

false_means = {1: 0.0,
    2: 0.0,
    3: 0.033228476445862423,
    4: -0.07855878582666051,
    5: 0.034329142427864542,
    6: -0.017268956728594513,
    7: -0.0071124788299347487,
    8: -0.013181978793935416,
    9: 0.0023705610566015336,
    10: 0.00070116888570971895,
    11: -0.0041397181788511992,
    12: 0.0014699296681649052,
    13: 0.0097800479136435185,
    14: -0.0032110918167259439,
    15: 0.0048763351903329585,
    'others': 0.0037659186273161795}

sd_values = {1: 0.0,
  2: 0.58498335602970186,
  3: 0.42664785723442805,
  4: 0.34036983878127269,
  5: 0.28488842832630584,
  6: 0.24572014899460723,
  7: 0.20308675880185156,
  8: 0.18467644024614244,
  9: 0.15415680499101236,
  10: 0.15182382018049584,
  11: 0.14161077919869267,
  12: 0.13642935235452203,
  13: 0.13552056498543488,
  14: 0.12701039786731264,
  15: 0.1113836025699847,
  'others': 0.094468108092195635}


false_sd = {1: 0.0,
  2: 1,
  3: 0.56528782704253377,
  4: 0.40854803613122559,
  5: 0.32626846409167826,
  6: 0.27033942263805921,
  7: 0.22307230966364977,
  8: 0.19676517251673967,
  9: 0.16361108185843729,
  10: 0.15853167515784253,
  11: 0.13425305526803583,
  12: 0.11768467972898947,
  13: 0.12774369599252189,
  14: 0.096634787346913095,
  15: 0.098841110490012749,
  'others': 0.083626629835986774}


normal_distribution = gaussian(0,1)

function getPr(lacr, slacr, sdepth){
  if (sdepth>15) {
    sdepth='other'
  }
  mean = means[sdepth];
  std = sd_values[sdepth];
  false_mean = false_means[sdepth];
  false_std = false_sd[sdepth];

  leaving = getPdf(lacr,slacr, mean, std);
  // leaving = Math.abs((lacr-slacr -mean)/std)
  false_leaving = getPdf(lacr,slacr, false_mean, false_std);
  // false_ = Math.abs((lacr-slacr -false_mean)/false_std)
  return getProb(leaving, false_leaving)


}

function getPdf(lacr, slacr, mean,std){
  x = lacr-slacr;
  numerator = normal_distribution.pdf((x-mean)/std)/std;
  denominator = normal_distribution.cdf((1-mean)/std) - normal_distribution.cdf((-1-mean)/std);
  console.log('getPdf', sessionTimes.slice(-1), (x-mean)/std);
  return numerator/denominator;
}

function getProb(leaving, false_){
  return false_/(leaving+false_);
}
